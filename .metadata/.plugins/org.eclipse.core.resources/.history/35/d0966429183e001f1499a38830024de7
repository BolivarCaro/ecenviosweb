package com.proyecto.crudecenvios.sprindbootecenvios.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.proyecto.crudecenvios.sprindbootecenvios.services.CustomerService;

@Configuration
@EnableWebSecurity
public class SecurityConfig{
	
	@Autowired
	private CustomerService customerService;
	
	@Bean
	public BCryptPasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	public DaoAuthenticationProvider authenticationProvider() {
		DaoAuthenticationProvider auth = new DaoAuthenticationProvider();
		auth.setUserDetailsService(customerService);
		auth.setPasswordEncoder(passwordEncoder());
		return auth;
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
	    http
	        .authorizeRequests()
	            .antMatchers(
	                "/record/**",
	                "/js/**",
	                "/css/**",
	                "/img/**"
	            )
	            .permitAll() // Allow access to these resources without authentication
	        .anyRequest()
	            .authenticated() // Require authentication for any other request
	        .and()
	        .formLogin()
	            .loginPage("/login") // Login page URL
	            .permitAll() // Allow access to login page
	        .and()
	        .logout()
	            .invalidateHttpSession(true) // Invalidate session on logout
	            .clearAuthentication(true) // Clear authentication on logout
	            .logoutUrl("/logout")
	            .logoutSuccessUrl("/login?logout") // Redirect to login page after logout
	            .permitAll(); // Allow access to logout URL
	}

	
}
